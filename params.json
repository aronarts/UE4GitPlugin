{
  "name": "UE4GitPlugin",
  "tagline": "GitSourceControl UE4 Plugin (beta, now integrated into UE4.7)",
  "body": "Unreal Engine 4 Git Source Control Plugin\r\n-----------------------------------------\r\n\r\n[![Join the chat at https://gitter.im/SRombauts/UE4GitPlugin](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/SRombauts/UE4GitPlugin?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\nUE4GitPlugin is a simple Git Source Control Plugin for Unreal Engine\r\n\r\n**It has been integrated by default in UE4.7 in \"Beta\".**\r\n\r\nThis is a developement fork to be able to develop a \"v2\" of the plugin alongside the existing git plugin inside currents version of the engine.\r\n\r\nHave a look at the [Git Plugin Tutorial on the Wiki](https://wiki.unrealengine.com/Git_source_control_%28Tutorial%29).\r\n\r\n### Status\r\n\r\nThis Git Source Control Plugin is now part of the default Unreal Engine 4.7\r\n\r\nBeta version 1.0:\r\n- initialize a new Git local repository ('git init') to manage your UE4 Game Project.\r\n- create an appropriate .gitignore file as part as initialization\r\n- can also make the initial commit\r\n- display status icons to show modified/added/deleted/untracked files\r\n- show history of a file\r\n- diff against depot or between previous versions of a file\r\n- revert modifications of a file\r\n- add a file\r\n- delete a file\r\n- checkin/commit a file (cannot handle atomically more than 20 files)\r\n- migrate an asset between projects under Git\r\n- solve a merge conflict on blueprints\r\n- show current branch name in status text\r\n- Github LFS, git-annexe and/or git-media are working under Windows\r\n- Windows, Mac and Linux\r\n\r\n#### What *cannot* be done presently (TODO list for v1.0, ordered by priority):\r\n- add localisation for git specific messages\r\n- displaying states of 'Engine' assets (also needs management of 'out of tree' files)\r\n- tags: implement ISourceControlLabel to manage git tags\r\n- Branch is not in the current Editor workflow (but on Epic Roadmap)\r\n- Pull/Fetch/Push are not in the current Editor workflow\r\n- Amend a commit is not in the current Editor workflow\r\n- configure user name & email ('git config user.name' & git config user.email')\r\n\r\n#### Known issues:\r\n- the Editor does not show deleted files (only when deleted externaly?)\r\n- the Editor does not show missing files\r\n- the Editor does not show .uproject file\r\n- issue #22: A Move/Rename leaves a redirector file behind\r\n- improve the 'Init' window text, hide it if connection is already done, auto connect\r\n- reverting an asset does not seem to update content in Editor! Issue in Editor?\r\n- standard Editor commit dialog ask if user wants to \"Keep Files Checked Out\" => no use for Git or Mercurial CanCheckOut()==false\r\n\r\n#### In-code TODO list (internal roadmap):\r\n\r\n- FGitConnectWorker::Execute (While project not in Git source control)\r\n  Improve error message \"You should check out a working copy...\"\r\n  => double error message (and in reverse order) with \"Project is not part of a Git working copy\"\r\n\r\n- FGitSourceControlRevision::GetBranchSource() const\r\n  if this revision was copied from some other revision, then that source revision should\r\n\tbe returned here (this should be determined when history is being fetched)\r\n- FGitSourceControlState::GetBaseRevForMerge()\r\n  get revision of the merge-base (https://www.kernel.org/pub/software/scm/git/docs/git-merge-base.html)\r\n\t\r\n- FGitConnectWorker::Execute()\r\n  popup to propose to initialize the git repository \"git init + .gitignore\"\r\n\r\n- FGitSyncWorker (GitSourceControlOperations.h)\r\n  git fetch remote(s) to be able to show files not up-to-date with the serveur\r\n- FGitSourceControlState::IsCurrent() const\r\n  check the state of the HEAD versus the state of tracked branch on remote\r\n\r\n- FGitSourceControlRevision::GetFileSize() const\r\n\tgit log does not give us the file size, but we could run a specific command\r\n\r\n- GitSourceControlUtils::CheckGitAvailability\r\n  also check Git config user.name & user.email\r\n\r\nWindows:\r\n- GitSourceControlUtils::FindGitBinaryPath\r\n  use the Windows registry to find Git\r\n\r\nMac:\r\n- GitSourceControlUtils::RunCommandInternalRaw\r\n  Specifying the working copy (the root) of the git repository (before the command itself)\r\n\tdoes not work in UE4.1 on Mac/Linux if there is a space in the path (\"/Users/xxx/Unreal Project/MyProject\")\r\n\r\nBug reports?\r\n- FGitSourceControlRevision::Get\r\n  Bug report: a counter is needed to avoid overlapping files; temp files are not (never?) released by Editor!\r\n\r\n- GitSourceControlUtils::UpdateCachedStates\r\n  // State->TimeStamp = InState.TimeStamp; // Bug report: Workaround a bug with the Source Control Module not updating file state after a \"Save\"\r\n\r\n### Getting started\r\n\r\nQuick demo of the Git Plugin on Unreal Engine 4.12 (preview) \r\n[![Git Plugin on Unreal Engine 4.12 (preview)](https://img.youtube.com/vi/rRhPl9vL58Q/0.jpg)](https://youtu.be/rRhPl9vL58Q)\r\n\r\n#### Install Git\r\n\r\nUnder Windows 64bits, you could either:\r\n- install a standalone Git, usually in \"C:\\Program Files (x86)\\Git\\bin\\git.exe\".\r\n- or copy a [portable Git](https://code.google.com/p/msysgit/downloads/list?can=1&q=PortableGit)\r\ninside \"<UnrealEngine>/Engine/Binaries/ThirdParty/git/Win32\".\r\n\r\n#### Activate Git Source Control for your Game Project\r\n\r\nLoad your Game Project, then open:\r\n\r\n```\r\nFile->Connect To Source Control... -> Git: Accept Settings\r\n```\r\n\r\nSee also the [Source Control official Documentation](https://docs.unrealengine.com/latest/INT/Engine/UI/SourceControl/index.html)\r\n\r\n### License\r\n\r\nCopyright (c) 2014-2015 Sebastien Rombauts (sebastien.rombauts@gmail.com)\r\n\r\nDistributed under the MIT License (MIT) (See accompanying file LICENSE.txt\r\nor copy at http://opensource.org/licenses/MIT)\r\n\r\n## How to contribute\r\n### GitHub website\r\nThe most efficient way to help and contribute to this wrapper project is to\r\nuse the tools provided by GitHub:\r\n- please fill bug reports and feature requests here: https://github.com/SRombauts/UE4GitPlugin/issues\r\n- fork the repository, make some small changes and submit them with independent pull-requests\r\n\r\n### Contact\r\nYou can also email me directly, I will answer any questions and requests.\r\n\r\n### Coding Style Guidelines\r\nThe source code follow the UnreaEngine official [Coding Standard](https://docs.unrealengine.com/latest/INT/Programming/Development/CodingStandard/index.html) :\r\n- CamelCase naming convention, with a prefix letter to differentiate classes ('F'), interfaces ('I'), templates ('T')\r\n- files (.cpp/.h) are named like the class they contains\r\n- Doxygen comments, documentation is located with declaration, on headers\r\n- Use portable common features of C++11 like nullptr, auto, range based for, override keyword\r\n- Braces on their own line\r\n- Tabs to indent code, with a width of 4 characters\r\n\r\n## See also\r\n\r\n- [Git Source Control Tutorial on the Wikis](https://wiki.unrealengine.com/Git_source_control_(Tutorial))\r\n- [UE4 Git Plugin website](http://srombauts.github.com/UE4GitPlugin)\r\n\r\n- [ue4-hg-plugin for Mercurial (and bigfiles)](https://github.com/enlight/ue4-hg-plugin)",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}